# default.custom.yaml
# encoding: utf-8

patch:
  # for veteran chord-typist
  chord_duration: 0.1  # seconds

  # options: always | never | appropriate
  show_notifications_when: appropriate

  # Show notifications via Notification Center instead of Growl.
  # (Only valid if OS version is at least 10.8 and
  #  'show_notifications_when' is NOT set to 'never'.)
  show_notifications_via_notification_center: true
  # app_options/com.runningwithcrayons.Alfred-3: {}

  schema_list:
    # - schema: luna_pinyin
    # - schema: luna_pinyin_simp
    # - schema: luna_pinyin_fluency
    # - schema: guhuwubi_pro_dvorak
    # - schema: guhuwubi_dvorak_1_06d
    - schema: guhuwubi
    - schema: pinyin_simp

  switcher:
    caption: 〔方案選單〕
    hotkeys:
      - Control+grave
     # - Control+Shift+grave
     # - F4
    save_options:
     # - full_shape
      - ascii_punct
      - simplification
      - extended_charset
    fold_options: true
    abbreviate_options: true
    option_list_separator: '／'

  menu:
    page_size: 5

  punctuator:
    full_shape:
      ' ' : { commit: '　' }
      ',' : { commit: ， }
      '.' : { commit: 。 }
      '<' : [ 《, 〈, «, ‹ ]
      '>' : [ 》, 〉, », › ]
      '/' : [ ／, ÷ ]
      '?' : { commit: ？ }
      ';' : { commit: ； }
      ':' : { commit: ： }
      '''' : { pair: [ '‘', '’' ] }
      '"' : { pair: [ '“', '”' ] }
      '\' : [ 、, ＼ ]
      '|' : [ ·, ｜, '§', '¦' ]
      '`' : ｀
      '~' : ～
      '!' : { commit: ！ }
      '@' : [ ＠, ☯ ]
      '#' : [ ＃, ⌘ ]
      '%' : [ ％, '°', '℃' ]
      '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
      '^' : { commit: …… }
      '&' : ＆
      '*' : [ ＊, ·, ・, ×, ※, ❂ ]
      '(' : （
      ')' : ）
      '-' : －
      '_' : ——
      '+' : ＋
      '=' : ＝
      '[' : [ 「, 【, 〔, ［ ]
      ']' : [ 」, 】, 〕, ］ ]
      '{' : [ 『, 〖, ｛ ]
      '}' : [ 』, 〗, ｝ ]
    half_shape:
      ',' : { commit: ， }
      '.' : { commit: 。 }
      '<' : [ 《, 〈, «, ‹ ]
      '>' : [ 》, 〉, », › ]
      '/' : [ 、, '/', ／, ÷ ]
      '?' : { commit: ？ }
      ';' : { commit: ； }
      ':' : { commit: ： }
      '''' : { pair: [ '‘', '’' ] }
      '"' : { pair: [ '“', '”' ] }
      '\' : [ 、, '\', ＼ ]
      '|' : [ ·, '|', ｜, '§', '¦' ]
      '`' : '`'
      '~' : [ '~', ～ ]
      '!' : { commit: ！ }
      '@' : '@'
      '#' : '#'
      '%' : [ '%', ％, '°', '℃' ]
      '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
      '^' : { commit: …… }
      '&' : '&'
      '*' : [ '*', ＊, ·, ・, ×, ※, ❂ ]
      '(' : （
      ')' : ）
      '-' : '-'
      '_' : ——
      '+' : '+'
      '=' : '='
      '[' : [ 「, 【, 〔, ［ ]
      ']' : [ 」, 】, 〕,  ］ ]
      '{' : [ 『, 〖, ｛ ]
      '}' : [ 』, 〗, ｝ ]

  key_binder:
    bindings:
      # Emacs style
      - { when: composing, accept: Control+p, send: Up }
      - { when: composing, accept: Control+n, send: Down }
      - { when: composing, accept: Control+b, send: Left }
      - { when: composing, accept: Control+f, send: Right }
      - { when: composing, accept: Control+a, send: Home }
      - { when: composing, accept: Control+e, send: End }
      - { when: composing, accept: Control+d, send: Delete }
      - { when: composing, accept: Control+k, send: Shift+Delete }
      - { when: composing, accept: Control+h, send: BackSpace }
      - { when: composing, accept: Control+g, send: Escape }
      - { when: composing, accept: Control+bracketleft, send: Escape }
      - { when: composing, accept: Alt+v, send: Page_Up }
      - { when: composing, accept: Control+v, send: Page_Down }
      # move by word
      - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
      - { when: composing, accept: Shift+Tab, send: Shift+Left }
      - { when: composing, accept: Tab, send: Shift+Right }
      # flip page
      - { when: has_menu, accept: minus, send: Page_Up }
      - { when: has_menu, accept: equal, send: Page_Down }
      - { when: paging, accept: comma, send: Page_Up }
      - { when: has_menu, accept: period, send: Page_Down }
      # hotkey switch
      - { when: always, accept: Control+Shift+1, select: .next }
      - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+3, toggle: full_shape }
      - { when: always, accept: Control+Shift+4, toggle: simplification }
      - { when: always, accept: Control+Shift+5, toggle: extended_charset }
      - { when: always, accept: Control+Shift+exclam, select: .next }
      - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
      - { when: always, accept: Control+Shift+dollar, toggle: simplification }
      - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
      # Shift+space 容易误操作
      # - { when: always, accept: Shift+space, toggle: full_shape }
      - { when: always, accept: Control+period, toggle: ascii_punct }

  recognizer:
    patterns:
      email: "^[A-Za-z][-_.0-9A-Za-z]*@.*$"
      uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
      url: "^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]+[.].+$"

  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      # "ascii_composer/switch_key/Shift_L": noop 
      Shift_L: inline_ascii
      # Shift_R: commit_text
      # Shift_L: noop # 左shift不切换英文输入
      Shift_R: noop
      Control_L: noop
      Control_R: noop
      Caps_Lock: clear
      Eisu_toggle: clear
      